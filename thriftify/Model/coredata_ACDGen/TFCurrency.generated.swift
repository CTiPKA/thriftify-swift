//
//  TFCurrency.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - TFCurrency properties

extension TFCurrency {

    @NSManaged var code: NSString?
    @NSManaged var identifier: NSString?
    @NSManaged var name: NSString?

    @NSManaged var transactions: NSSet

}

// MARK: - TFCurrency KVC compliant to-many accessors and helpers

extension TFCurrency {

    @NSManaged private func addTransactionsObject(object: TFTransaction)
    @NSManaged private func removeTransactionsObject(object: TFTransaction)
    @NSManaged func addTransactions(transactions: NSSet)
    @NSManaged func removeTransactions(transactions: NSSet)

    func addTransaction(transaction: TFTransaction) { self.addTransactionsObject(transaction) }
    func removeTransaction(transaction: TFTransaction) { self.removeTransactionsObject(transaction) }

}

// MARK: - TFCurrency query attributes

extension TFCurrency {

    static let code = AlecrimCoreData.NullableAttribute<NSString>("code")
    static let identifier = AlecrimCoreData.NullableAttribute<NSString>("identifier")
    static let name = AlecrimCoreData.NullableAttribute<NSString>("name")

    static let transactions = AlecrimCoreData.Attribute<NSSet>("transactions")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: TFCurrency {

    var code: AlecrimCoreData.NullableAttribute<NSString> { return AlecrimCoreData.NullableAttribute<NSString>("code", self) }
    var identifier: AlecrimCoreData.NullableAttribute<NSString> { return AlecrimCoreData.NullableAttribute<NSString>("identifier", self) }
    var name: AlecrimCoreData.NullableAttribute<NSString> { return AlecrimCoreData.NullableAttribute<NSString>("name", self) }

    var transactions: AlecrimCoreData.Attribute<NSSet> { return AlecrimCoreData.Attribute<NSSet>("transactions", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var tfcurrencies: AlecrimCoreData.Table<TFCurrency> { return AlecrimCoreData.Table<TFCurrency>(dataContext: self) }

}

